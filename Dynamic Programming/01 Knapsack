using namespace std;

int max(int a, int b){
    return a>b ? a :b;
}

int knapsack(int W, int val[], int wt[], int n){
    int k[n+1][W+1];
    for(int i=0; i<=n; i++){
        for(int w=0; w<=W; w++){
            if(i==0 || w==0){
                k[i][w]=0;
            }else if(wt[i-1]<=w){
                k[i][w]=max(val[i-1]+k[i-1][w-wt[i-1]], k[i-1][w]);
            }else{
                k[i][w]=k[i-1][w];
            }
        }
    }
    return k[n][W];
}

int main() {
	//code
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	int t; cin>>t;
	while(t--){
	    int n; cin>>n;
	    int W; cin>>W;
	    int val[n];
	    int wt[n];
	    for(int i=0; i<n; i++){
	        cin>>val[i];
	    }
	    for(int i=0; i<n; i++){
	        cin>>wt[i];
	    }
	    cout<<knapsack(W, val, wt, n)<<"\n";
	}
	return 0;
}
